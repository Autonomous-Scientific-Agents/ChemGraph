name: Conda Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-conda-mace:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        python-version: ${{ matrix.python-version }}
        activate-environment: chemgraph-mace
        auto-activate-base: false
    
    - name: Install Conda dependencies for MACE
      shell: bash -l {0}
      run: |
        conda install -c conda-forge nwchem -y
        conda install -c conda-forge mamba -y
    
    - name: Install ChemGraph with MACE support
      shell: bash -l {0}
      run: |
        pip install -e .
        pip install pytest
    
    - name: Run tests with MACE
      shell: bash -l {0}
      run: |
        python -m pytest tests/ -v

  test-conda-uma:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        python-version: ${{ matrix.python-version }}
        activate-environment: chemgraph-uma
        auto-activate-base: false
    
    - name: Install Conda dependencies for UMA
      shell: bash -l {0}
      run: |
        conda install -c conda-forge nwchem -y
    
    - name: Install ChemGraph with UMA support (pip flag strategy)
      shell: bash -l {0}
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        echo "Installing base ChemGraph package (with mace-torch -> e3nn==0.4.4)..."
        pip install -e .
        echo "Ensuring UMA extras are installed with e3nn >= 0.5..."
        pip install -e ".[uma]" --upgrade --upgrade-strategy eager
        pip install pytest
    
    - name: Run tests with UMA
      shell: bash -l {0}
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        python -m pytest tests/ -v 